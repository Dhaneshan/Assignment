{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyP414w76U/JHdDh7TP5/DkH"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["Required Frameworks for the whole problem sets."],"metadata":{"id":"PdK8LzgZsgpd"}},{"cell_type":"code","source":["import pandas as pd\n","import numpy as np\n","import seaborn as sns\n","import matplotlib.pyplot as plt\n","from sklearn.model_selection import train_test_split\n","from sklearn.linear_model import LinearRegression\n","from sklearn.metrics import r2_score, mean_absolute_error, mean_squared_error\n","from math import sqrt\n","from sklearn.linear_model import Ridge\n","from sklearn.linear_model import Lasso\n","from sklearn.preprocessing import LabelEncoder"],"metadata":{"id":"F7Fsj6pFunAe","executionInfo":{"status":"ok","timestamp":1685455009076,"user_tz":-330,"elapsed":10,"user":{"displayName":"S Dhaneshan","userId":"18179611958018046570"}}},"execution_count":45,"outputs":[]},{"cell_type":"markdown","source":["**Problem Statement 1** \n","Write a Python code to perform the following tasks mentioned:\n","1.\tLoad the Dataset, check its shape\n","2.\tRectify the Data of the first four columns \n","3.\tCreate new features using the 'Data' feature and the make 'Data' column as index\n","4.\tHandle null and duplicate values \n","5.\tCheck the Data type of the features and convert them to the appropriate Data type -\n","6.\tAnalyze features with outlier values  \n","7.\tPlot and analyze correlation \n","8.\tSplit the Dataset for training and testing \n","9.\tTrain a linear regression model and print the intercept and coefficients \n","10.\tEvaluate the model using R2 score, mean absolute error, and root mean squared error \n"],"metadata":{"id":"K3xoQGzEhFBn"}},{"cell_type":"code","source":["#1 Load the Dataset, check its shape\n","Data=pd.read_csv(\"/content/Consumo_cerveja.csv\")\n","Data.describe()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":300},"id":"lsTLMp2Wli3A","executionInfo":{"status":"ok","timestamp":1685454766711,"user_tz":-330,"elapsed":57,"user":{"displayName":"S Dhaneshan","userId":"18179611958018046570"}},"outputId":"78aab45a-ddd8-4610-c344-aa16925b0214"},"execution_count":4,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       Final de Semana  Consumo de cerveja (litros)\n","count       365.000000                   365.000000\n","mean          0.284932                    25.401367\n","std           0.452001                     4.399143\n","min           0.000000                    14.343000\n","25%           0.000000                    22.008000\n","50%           0.000000                    24.867000\n","75%           1.000000                    28.631000\n","max           1.000000                    37.937000"],"text/html":["\n","  <div id=\"df-4a9dfe93-2e28-40e3-80e6-4b335f6f5fd7\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Final de Semana</th>\n","      <th>Consumo de cerveja (litros)</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>365.000000</td>\n","      <td>365.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>0.284932</td>\n","      <td>25.401367</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>0.452001</td>\n","      <td>4.399143</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>0.000000</td>\n","      <td>14.343000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>0.000000</td>\n","      <td>22.008000</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>0.000000</td>\n","      <td>24.867000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>1.000000</td>\n","      <td>28.631000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>1.000000</td>\n","      <td>37.937000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-4a9dfe93-2e28-40e3-80e6-4b335f6f5fd7')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-4a9dfe93-2e28-40e3-80e6-4b335f6f5fd7 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-4a9dfe93-2e28-40e3-80e6-4b335f6f5fd7');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":4}]},{"cell_type":"code","source":["# 2 Rectify the Data of the first four columns \n","Data.head()"],"metadata":{"id":"CMC8bdwphP3m","colab":{"base_uri":"https://localhost:8080/","height":238},"executionInfo":{"status":"ok","timestamp":1685455179390,"user_tz":-330,"elapsed":458,"user":{"displayName":"S Dhaneshan","userId":"18179611958018046570"}},"outputId":"7497a487-4c3d-4e52-d5bb-053b9ae7d248"},"execution_count":48,"outputs":[{"output_type":"execute_result","data":{"text/plain":["            Temperatura Media (C)  Temperatura Minima (C)  \\\n","Data                                                        \n","2015-01-01                  27.30                    23.9   \n","2015-01-02                  27.02                    24.5   \n","2015-01-03                  24.82                    22.4   \n","2015-01-04                  23.98                    21.5   \n","2015-01-05                  23.82                    21.0   \n","\n","            Temperatura Maxima (C)  Precipitacao (mm)  Final de Semana  \\\n","Data                                                                     \n","2015-01-01                    32.5                0.0              0.0   \n","2015-01-02                    33.5                0.0              0.0   \n","2015-01-03                    29.9                0.0              1.0   \n","2015-01-04                    28.6                1.2              1.0   \n","2015-01-05                    28.3                0.0              0.0   \n","\n","            Consumo de cerveja (litros)  Month  Day  \n","Data                                                 \n","2015-01-01                       25.461    1.0  3.0  \n","2015-01-02                       28.972    1.0  4.0  \n","2015-01-03                       30.814    1.0  5.0  \n","2015-01-04                       29.799    1.0  6.0  \n","2015-01-05                       28.900    1.0  0.0  "],"text/html":["\n","  <div id=\"df-3e0a22b6-51b8-4f63-9088-793e214a71a8\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Temperatura Media (C)</th>\n","      <th>Temperatura Minima (C)</th>\n","      <th>Temperatura Maxima (C)</th>\n","      <th>Precipitacao (mm)</th>\n","      <th>Final de Semana</th>\n","      <th>Consumo de cerveja (litros)</th>\n","      <th>Month</th>\n","      <th>Day</th>\n","    </tr>\n","    <tr>\n","      <th>Data</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2015-01-01</th>\n","      <td>27.30</td>\n","      <td>23.9</td>\n","      <td>32.5</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>25.461</td>\n","      <td>1.0</td>\n","      <td>3.0</td>\n","    </tr>\n","    <tr>\n","      <th>2015-01-02</th>\n","      <td>27.02</td>\n","      <td>24.5</td>\n","      <td>33.5</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>28.972</td>\n","      <td>1.0</td>\n","      <td>4.0</td>\n","    </tr>\n","    <tr>\n","      <th>2015-01-03</th>\n","      <td>24.82</td>\n","      <td>22.4</td>\n","      <td>29.9</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>30.814</td>\n","      <td>1.0</td>\n","      <td>5.0</td>\n","    </tr>\n","    <tr>\n","      <th>2015-01-04</th>\n","      <td>23.98</td>\n","      <td>21.5</td>\n","      <td>28.6</td>\n","      <td>1.2</td>\n","      <td>1.0</td>\n","      <td>29.799</td>\n","      <td>1.0</td>\n","      <td>6.0</td>\n","    </tr>\n","    <tr>\n","      <th>2015-01-05</th>\n","      <td>23.82</td>\n","      <td>21.0</td>\n","      <td>28.3</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>28.900</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-3e0a22b6-51b8-4f63-9088-793e214a71a8')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-3e0a22b6-51b8-4f63-9088-793e214a71a8 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-3e0a22b6-51b8-4f63-9088-793e214a71a8');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":48}]},{"cell_type":"code","source":["print(\"Dataframe shape: \",Data.shape)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"GULpBjas9PO4","executionInfo":{"status":"ok","timestamp":1685455175916,"user_tz":-330,"elapsed":418,"user":{"displayName":"S Dhaneshan","userId":"18179611958018046570"}},"outputId":"4a155ea1-6841-414c-ea50-7b636cbe9327"},"execution_count":47,"outputs":[{"output_type":"stream","name":"stdout","text":["Dataframe shape:  (365, 8)\n"]}]},{"cell_type":"code","source":["Data['Temperatura Media (C)'] = Data['Temperatura Media (C)'].str.replace(',', '.').astype(float)\n","Data['Temperatura Minima (C)'] = Data['Temperatura Minima (C)'].str.replace(',', '.').astype(float)\n","Data['Temperatura Maxima (C)'] = Data['Temperatura Maxima (C)'].str.replace(',', '.').astype(float)\n","Data['Precipitacao (mm)'] = Data['Precipitacao (mm)'].str.replace(',', '.').astype(float)"],"metadata":{"id":"0BhtdB_Uvc-0","executionInfo":{"status":"ok","timestamp":1685454766713,"user_tz":-330,"elapsed":36,"user":{"displayName":"S Dhaneshan","userId":"18179611958018046570"}}},"execution_count":6,"outputs":[]},{"cell_type":"code","source":["Data.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":238},"id":"mDSyl6O49ZZx","executionInfo":{"status":"ok","timestamp":1685455223354,"user_tz":-330,"elapsed":403,"user":{"displayName":"S Dhaneshan","userId":"18179611958018046570"}},"outputId":"cdff1911-3f18-4bbc-efe9-ec077442b85e"},"execution_count":49,"outputs":[{"output_type":"execute_result","data":{"text/plain":["            Temperatura Media (C)  Temperatura Minima (C)  \\\n","Data                                                        \n","2015-01-01                  27.30                    23.9   \n","2015-01-02                  27.02                    24.5   \n","2015-01-03                  24.82                    22.4   \n","2015-01-04                  23.98                    21.5   \n","2015-01-05                  23.82                    21.0   \n","\n","            Temperatura Maxima (C)  Precipitacao (mm)  Final de Semana  \\\n","Data                                                                     \n","2015-01-01                    32.5                0.0              0.0   \n","2015-01-02                    33.5                0.0              0.0   \n","2015-01-03                    29.9                0.0              1.0   \n","2015-01-04                    28.6                1.2              1.0   \n","2015-01-05                    28.3                0.0              0.0   \n","\n","            Consumo de cerveja (litros)  Month  Day  \n","Data                                                 \n","2015-01-01                       25.461    1.0  3.0  \n","2015-01-02                       28.972    1.0  4.0  \n","2015-01-03                       30.814    1.0  5.0  \n","2015-01-04                       29.799    1.0  6.0  \n","2015-01-05                       28.900    1.0  0.0  "],"text/html":["\n","  <div id=\"df-c9680bfc-0dd9-448e-bb9e-25515877770d\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Temperatura Media (C)</th>\n","      <th>Temperatura Minima (C)</th>\n","      <th>Temperatura Maxima (C)</th>\n","      <th>Precipitacao (mm)</th>\n","      <th>Final de Semana</th>\n","      <th>Consumo de cerveja (litros)</th>\n","      <th>Month</th>\n","      <th>Day</th>\n","    </tr>\n","    <tr>\n","      <th>Data</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2015-01-01</th>\n","      <td>27.30</td>\n","      <td>23.9</td>\n","      <td>32.5</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>25.461</td>\n","      <td>1.0</td>\n","      <td>3.0</td>\n","    </tr>\n","    <tr>\n","      <th>2015-01-02</th>\n","      <td>27.02</td>\n","      <td>24.5</td>\n","      <td>33.5</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>28.972</td>\n","      <td>1.0</td>\n","      <td>4.0</td>\n","    </tr>\n","    <tr>\n","      <th>2015-01-03</th>\n","      <td>24.82</td>\n","      <td>22.4</td>\n","      <td>29.9</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>30.814</td>\n","      <td>1.0</td>\n","      <td>5.0</td>\n","    </tr>\n","    <tr>\n","      <th>2015-01-04</th>\n","      <td>23.98</td>\n","      <td>21.5</td>\n","      <td>28.6</td>\n","      <td>1.2</td>\n","      <td>1.0</td>\n","      <td>29.799</td>\n","      <td>1.0</td>\n","      <td>6.0</td>\n","    </tr>\n","    <tr>\n","      <th>2015-01-05</th>\n","      <td>23.82</td>\n","      <td>21.0</td>\n","      <td>28.3</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>28.900</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c9680bfc-0dd9-448e-bb9e-25515877770d')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-c9680bfc-0dd9-448e-bb9e-25515877770d button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-c9680bfc-0dd9-448e-bb9e-25515877770d');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":49}]},{"cell_type":"code","source":["# 3 Create new features using the 'Data' feature and the make 'Data' column as index\n","Data['Data'] = pd.to_datetime(Data['Data'])\n","Data.set_index('Data', inplace=True)\n","Data['Month'] = Data.index.month\n","Data['Day'] = Data.index.dayofweek\n","Data.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":238},"id":"P21WmJFJ06L8","executionInfo":{"status":"ok","timestamp":1685454766714,"user_tz":-330,"elapsed":31,"user":{"displayName":"S Dhaneshan","userId":"18179611958018046570"}},"outputId":"b9f1d0df-19a6-4527-d862-31d96aaa9336"},"execution_count":8,"outputs":[{"output_type":"execute_result","data":{"text/plain":["            Temperatura Media (C)  Temperatura Minima (C)  \\\n","Data                                                        \n","2015-01-01                  27.30                    23.9   \n","2015-01-02                  27.02                    24.5   \n","2015-01-03                  24.82                    22.4   \n","2015-01-04                  23.98                    21.5   \n","2015-01-05                  23.82                    21.0   \n","\n","            Temperatura Maxima (C)  Precipitacao (mm)  Final de Semana  \\\n","Data                                                                     \n","2015-01-01                    32.5                0.0              0.0   \n","2015-01-02                    33.5                0.0              0.0   \n","2015-01-03                    29.9                0.0              1.0   \n","2015-01-04                    28.6                1.2              1.0   \n","2015-01-05                    28.3                0.0              0.0   \n","\n","            Consumo de cerveja (litros)  Month  Day  \n","Data                                                 \n","2015-01-01                       25.461    1.0  3.0  \n","2015-01-02                       28.972    1.0  4.0  \n","2015-01-03                       30.814    1.0  5.0  \n","2015-01-04                       29.799    1.0  6.0  \n","2015-01-05                       28.900    1.0  0.0  "],"text/html":["\n","  <div id=\"df-3988a987-d50b-471a-acde-0fb2a651bad2\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Temperatura Media (C)</th>\n","      <th>Temperatura Minima (C)</th>\n","      <th>Temperatura Maxima (C)</th>\n","      <th>Precipitacao (mm)</th>\n","      <th>Final de Semana</th>\n","      <th>Consumo de cerveja (litros)</th>\n","      <th>Month</th>\n","      <th>Day</th>\n","    </tr>\n","    <tr>\n","      <th>Data</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2015-01-01</th>\n","      <td>27.30</td>\n","      <td>23.9</td>\n","      <td>32.5</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>25.461</td>\n","      <td>1.0</td>\n","      <td>3.0</td>\n","    </tr>\n","    <tr>\n","      <th>2015-01-02</th>\n","      <td>27.02</td>\n","      <td>24.5</td>\n","      <td>33.5</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>28.972</td>\n","      <td>1.0</td>\n","      <td>4.0</td>\n","    </tr>\n","    <tr>\n","      <th>2015-01-03</th>\n","      <td>24.82</td>\n","      <td>22.4</td>\n","      <td>29.9</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>30.814</td>\n","      <td>1.0</td>\n","      <td>5.0</td>\n","    </tr>\n","    <tr>\n","      <th>2015-01-04</th>\n","      <td>23.98</td>\n","      <td>21.5</td>\n","      <td>28.6</td>\n","      <td>1.2</td>\n","      <td>1.0</td>\n","      <td>29.799</td>\n","      <td>1.0</td>\n","      <td>6.0</td>\n","    </tr>\n","    <tr>\n","      <th>2015-01-05</th>\n","      <td>23.82</td>\n","      <td>21.0</td>\n","      <td>28.3</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>28.900</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-3988a987-d50b-471a-acde-0fb2a651bad2')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-3988a987-d50b-471a-acde-0fb2a651bad2 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-3988a987-d50b-471a-acde-0fb2a651bad2');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":8}]},{"cell_type":"code","source":["# 4. Handle null and duplicate values\n","Data.dropna(inplace=True)\n","Data.drop_duplicates(inplace=True)\n","print(\"Afer Removing null values and delete the duplicate entrys Dataset shape: \",Data.shape)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"0nN3K9ttE0N5","executionInfo":{"status":"ok","timestamp":1685454766714,"user_tz":-330,"elapsed":27,"user":{"displayName":"S Dhaneshan","userId":"18179611958018046570"}},"outputId":"217a4699-33f0-4df3-8d42-ad5ca408e7d2"},"execution_count":9,"outputs":[{"output_type":"stream","name":"stdout","text":["Afer Removing null values and delete the duplicate entrys Dataset shape:  (365, 8)\n"]}]},{"cell_type":"code","source":["# 5. Check the Data type of the features and convert them to the appropriate Data type -\n","Data.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ZcDbWkLPFgUd","executionInfo":{"status":"ok","timestamp":1685454766715,"user_tz":-330,"elapsed":22,"user":{"displayName":"S Dhaneshan","userId":"18179611958018046570"}},"outputId":"a8590a2e-6209-4616-9197-29ab52f54715"},"execution_count":10,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","DatetimeIndex: 365 entries, 2015-01-01 to 2015-12-31\n","Data columns (total 8 columns):\n"," #   Column                       Non-Null Count  Dtype  \n","---  ------                       --------------  -----  \n"," 0   Temperatura Media (C)        365 non-null    float64\n"," 1   Temperatura Minima (C)       365 non-null    float64\n"," 2   Temperatura Maxima (C)       365 non-null    float64\n"," 3   Precipitacao (mm)            365 non-null    float64\n"," 4   Final de Semana              365 non-null    float64\n"," 5   Consumo de cerveja (litros)  365 non-null    float64\n"," 6   Month                        365 non-null    float64\n"," 7   Day                          365 non-null    float64\n","dtypes: float64(8)\n","memory usage: 25.7 KB\n"]}]},{"cell_type":"code","source":["# Analyze features with outlier values \n","Data.boxplot(figsize=(15,15)) \n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"mhld1DfEGI2Q","executionInfo":{"status":"ok","timestamp":1685454767627,"user_tz":-330,"elapsed":929,"user":{"displayName":"S Dhaneshan","userId":"18179611958018046570"}},"outputId":"f22e3067-ba19-416d-b41a-79408ff70b59"},"execution_count":11,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1500x1500 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["Data['Precipitacao (mm)'].hist(bins=100,figsize=(10,10))\n","plt.show()\n","print(\"Precipitaco(mm) Total Count :\",Data['Precipitacao (mm)'][Data['Precipitacao (mm)']==0].value_counts())"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":865},"id":"t0gGneS3HSfR","executionInfo":{"status":"ok","timestamp":1685454767628,"user_tz":-330,"elapsed":14,"user":{"displayName":"S Dhaneshan","userId":"18179611958018046570"}},"outputId":"5dbff348-99d3-467a-fa2a-ceb82d1ea934"},"execution_count":12,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x1000 with 1 Axes>"],"image/png":"\n"},"metadata":{}},{"output_type":"stream","name":"stdout","text":["Precipitaco(mm) Total Count : 0.0    218\n","Name: Precipitacao (mm), dtype: int64\n"]}]},{"cell_type":"code","source":["correlation = Data.corr()\n","sns.heatmap(correlation, annot = True)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":630},"id":"fQlQdnAAJrDN","executionInfo":{"status":"ok","timestamp":1685454768919,"user_tz":-330,"elapsed":1303,"user":{"displayName":"S Dhaneshan","userId":"18179611958018046570"}},"outputId":"e8f93640-a97d-4b05-ceba-4a7c90037072"},"execution_count":13,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<Axes: >"]},"metadata":{},"execution_count":13},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 2 Axes>"],"image/png":"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jEi+eKaWiF6Lys7UypG2tjays7Nhbm6OdevWITg4GOnp6QAAS0tLhISEwM/PT3BKIiJiUUtEr8WTxaCcKa3hjaTh3r17mD17NmJiYnD9+nWUlJSUu56RkSEoGZF88fgBEb0WSvq8XFnDW9nQfKKXMXz4cBw4cACffvopLCwsFHfTFSIRuFNLRPQcWlpaMDExUUzDG0mDqakpdu7ciY4dO4qOQqQY3KklInoBJTS8kbSYmZmhdu3aomMQKQp3aomInkMpDW8kLWvXrsW2bduwevVqHmUhekVY1BIRPYdSGt5IWlxcXJCeno7S0lLY2NhAR0en3PUTJ04ISkYkXzx+QET0HPzcT69Dv379REcgUhzu1BIRERGR7HGnloiISJDjx48jNTUVANCsWTPeIpfoX2BRS0REVM2uX7+OQYMGYf/+/TA1NQUA5ObmokuXLvjpp5/w9ttviw1IJENaogMQERG9afz9/XH37l2cPn0at27dwq1bt5CSkoK8vDyMHTtWdDwiWeKZWiIiompmYmKCvXv3onXr1uXWjx49iu7duyM3N1dMMCIZ404tERFRNSspKakwxgsAdHR0UFJSIiARkfyxqCUiIqpmXbt2RUBAAK5evape+/vvvxEYGIhu3boJTEYkXzx+QEREVM0uX76MPn364PTp02jYsKF6rXnz5ti+fTsaNGggOCGR/LCoJSIiEqC0tBR79+7F2bNnAQCOjo54//33Baciki8WtUREREQkezxTS0REVE1iY2Ph5OSEvLy8Ctfu3LmDZs2a4dChQwKSEckfi1oiIqJqEh4ejhEjRsDY2LjCNRMTE3zxxReYP3++gGRE8seiloiIqJokJyfDw8Pjmde7d++O48ePV2MiIuVgUUtERFRN/vnnn0rn05apUaMGcnJyqjERkXKwqCUiIqom9evXR0pKyjOv//XXX7CwsKjGRETKwaKWiIiomnh6emLq1KkoKiqqcK2wsBDTpk3Dhx9+KCAZkfxxpBcREVE1+eeff+Dq6gptbW2MGTMGDg4OAICzZ89i8eLFePToEU6cOIG6desKTkokPyxqiYiIqlFWVhZGjhyJP/74A2VvwSqVCj169MDixYtha2srOCGRPLGoJSIiEuD27dtIS0tDaWkp7O3tYWZmJjoSkayxqCUiIiIi2WOjGBERERHJHotaIiIiIpI9FrVEREREJHssaomIiIhI9ljUEhEREZHssaglIiIiItljUUtEREREsvd/LGNmVuZFPf4AAAAASUVORK5CYII=\n"},"metadata":{}}]},{"cell_type":"code","source":["# 8. Split the dataset for training and testing\n","X = Data.drop('Consumo de cerveja (litros)', axis=1)\n","y = Data['Consumo de cerveja (litros)']\n","X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2,random_state = 10)"],"metadata":{"id":"G7Iwnqa5JgMc","executionInfo":{"status":"ok","timestamp":1685454768919,"user_tz":-330,"elapsed":30,"user":{"displayName":"S Dhaneshan","userId":"18179611958018046570"}}},"execution_count":14,"outputs":[]},{"cell_type":"code","source":["# 9. Train a linear regression model and print the intercept and coefficients\n","model = LinearRegression()\n","model.fit(X_train, y_train)\n","print(\"Intercept:\", model.intercept_)\n","print(\"Coefficients:\", model.coef_)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"JTAwz06iKB1O","executionInfo":{"status":"ok","timestamp":1685454768920,"user_tz":-330,"elapsed":29,"user":{"displayName":"S Dhaneshan","userId":"18179611958018046570"}},"outputId":"147af853-0530-4fdf-8645-d320b29c414f"},"execution_count":15,"outputs":[{"output_type":"stream","name":"stdout","text":["Intercept: 5.292853080302891\n","Coefficients: [-0.09455689  0.1045553   0.69335704 -0.0551811   5.32179607  0.11122303\n"," -0.03605828]\n"]}]},{"cell_type":"code","source":["# 10. Evaluate the model using the R2 score, mean absolute error, and root mean squared error\n","y_pred = model.predict(X_test)\n","r2 = r2_score(y_test, y_pred)\n","mae = mean_absolute_error(y_test, y_pred)\n","rmse = np.sqrt(mean_squared_error(y_test, y_pred))\n","print(\"R2 Score:\", r2)\n","print(\"Mean Absolute Error:\", mae)\n","print(\"Root Mean Squared Error:\", rmse)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"7PdlAXhsLO7v","executionInfo":{"status":"ok","timestamp":1685454768920,"user_tz":-330,"elapsed":21,"user":{"displayName":"S Dhaneshan","userId":"18179611958018046570"}},"outputId":"433c3337-52d6-4c4c-9d0c-2e0810eb3e2e"},"execution_count":16,"outputs":[{"output_type":"stream","name":"stdout","text":["R2 Score: 0.7502930283811245\n","Mean Absolute Error: 1.856793858868475\n","Root Mean Squared Error: 2.2317763522834184\n"]}]},{"cell_type":"markdown","source":["Problem Statement 2.\n","\n"," Write a Python code to perform the following tasks mentioned:\n","1.\tLoad the data, check its shape and check for null values \n","2.\tSplit the dataset for training and testing - 1000 instances for testing\n","3.\tTrain the model using sklearn (Apply linear regression to train a model for prediction)\n","4.\tPredict the prices on test data and evaluate the model by r2 score and mean absolute error\n","5.\tFind coefficient and intercept using the trained model"],"metadata":{"id":"geJP2WHjLnfn"}},{"cell_type":"code","source":["Data1=pd.read_csv(\"/content/california_housing_train.csv\")\n","print(\"Shape of Calfornia Housing Dataset :\",Data1.shape)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"umnxqT20OD9o","executionInfo":{"status":"ok","timestamp":1685454787021,"user_tz":-330,"elapsed":68,"user":{"displayName":"S Dhaneshan","userId":"18179611958018046570"}},"outputId":"171313b9-b70a-497f-fdf5-c18b689d1d11"},"execution_count":18,"outputs":[{"output_type":"stream","name":"stdout","text":["Shape of Calfornia Housing Dataset : (17000, 9)\n"]}]},{"cell_type":"code","source":["Data1.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"rtJPKzifh3PG","executionInfo":{"status":"ok","timestamp":1685454787024,"user_tz":-330,"elapsed":65,"user":{"displayName":"S Dhaneshan","userId":"18179611958018046570"}},"outputId":"c62c6197-070b-48b8-9f64-5121c75790b8"},"execution_count":19,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   longitude  latitude  housing_median_age  total_rooms  total_bedrooms  \\\n","0    -114.31     34.19                15.0       5612.0          1283.0   \n","1    -114.47     34.40                19.0       7650.0          1901.0   \n","2    -114.56     33.69                17.0        720.0           174.0   \n","3    -114.57     33.64                14.0       1501.0           337.0   \n","4    -114.57     33.57                20.0       1454.0           326.0   \n","\n","   population  households  median_income  median_house_value  \n","0      1015.0       472.0         1.4936             66900.0  \n","1      1129.0       463.0         1.8200             80100.0  \n","2       333.0       117.0         1.6509             85700.0  \n","3       515.0       226.0         3.1917             73400.0  \n","4       624.0       262.0         1.9250             65500.0  "],"text/html":["\n","  <div id=\"df-df35231c-e6c6-4dcb-a21d-cc76e58849bd\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>longitude</th>\n","      <th>latitude</th>\n","      <th>housing_median_age</th>\n","      <th>total_rooms</th>\n","      <th>total_bedrooms</th>\n","      <th>population</th>\n","      <th>households</th>\n","      <th>median_income</th>\n","      <th>median_house_value</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>-114.31</td>\n","      <td>34.19</td>\n","      <td>15.0</td>\n","      <td>5612.0</td>\n","      <td>1283.0</td>\n","      <td>1015.0</td>\n","      <td>472.0</td>\n","      <td>1.4936</td>\n","      <td>66900.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>-114.47</td>\n","      <td>34.40</td>\n","      <td>19.0</td>\n","      <td>7650.0</td>\n","      <td>1901.0</td>\n","      <td>1129.0</td>\n","      <td>463.0</td>\n","      <td>1.8200</td>\n","      <td>80100.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>-114.56</td>\n","      <td>33.69</td>\n","      <td>17.0</td>\n","      <td>720.0</td>\n","      <td>174.0</td>\n","      <td>333.0</td>\n","      <td>117.0</td>\n","      <td>1.6509</td>\n","      <td>85700.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>-114.57</td>\n","      <td>33.64</td>\n","      <td>14.0</td>\n","      <td>1501.0</td>\n","      <td>337.0</td>\n","      <td>515.0</td>\n","      <td>226.0</td>\n","      <td>3.1917</td>\n","      <td>73400.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>-114.57</td>\n","      <td>33.57</td>\n","      <td>20.0</td>\n","      <td>1454.0</td>\n","      <td>326.0</td>\n","      <td>624.0</td>\n","      <td>262.0</td>\n","      <td>1.9250</td>\n","      <td>65500.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-df35231c-e6c6-4dcb-a21d-cc76e58849bd')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-df35231c-e6c6-4dcb-a21d-cc76e58849bd button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-df35231c-e6c6-4dcb-a21d-cc76e58849bd');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":19}]},{"cell_type":"code","source":["Data1.isna().sum() "],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"AisuMSFFkCEL","executionInfo":{"status":"ok","timestamp":1685454787025,"user_tz":-330,"elapsed":63,"user":{"displayName":"S Dhaneshan","userId":"18179611958018046570"}},"outputId":"950f7d62-28f0-4b23-c723-88d3f9a4e4f2"},"execution_count":20,"outputs":[{"output_type":"execute_result","data":{"text/plain":["longitude             0\n","latitude              0\n","housing_median_age    0\n","total_rooms           0\n","total_bedrooms        0\n","population            0\n","households            0\n","median_income         0\n","median_house_value    0\n","dtype: int64"]},"metadata":{},"execution_count":20}]},{"cell_type":"code","source":[" # check for null values And Remove the Null Values\n","Data1.dropna(inplace=True)\n","print(\" After Remove the null values The Shape of Calfornia Housing Dataset :\",Data1.shape)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"_kXT4JfdUKxe","executionInfo":{"status":"ok","timestamp":1685454787026,"user_tz":-330,"elapsed":57,"user":{"displayName":"S Dhaneshan","userId":"18179611958018046570"}},"outputId":"89058c24-fdb2-45ee-c05a-e22db72af267"},"execution_count":21,"outputs":[{"output_type":"stream","name":"stdout","text":[" After Remove the null values The Shape of Calfornia Housing Dataset : (17000, 9)\n"]}]},{"cell_type":"code","source":["X=Data1.drop('median_house_value', axis=1)\n","Y=Data1['median_house_value']\n","X_train, X_test, y_train, y_test = train_test_split(X, Y, test_size=1000,random_state = 10)"],"metadata":{"id":"p0flQcZheNW2","executionInfo":{"status":"ok","timestamp":1685454787027,"user_tz":-330,"elapsed":52,"user":{"displayName":"S Dhaneshan","userId":"18179611958018046570"}}},"execution_count":22,"outputs":[]},{"cell_type":"code","source":["# # Print the shapes of the training and testing sets\n","print(\"Training set shape:\", X_train.shape)\n","print(\"Testing set shape:\", X_test.shape)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"NnIfRzv3mfwF","executionInfo":{"status":"ok","timestamp":1685454787028,"user_tz":-330,"elapsed":52,"user":{"displayName":"S Dhaneshan","userId":"18179611958018046570"}},"outputId":"4d555e81-8d30-44f4-fc20-90c3ff2f2088"},"execution_count":23,"outputs":[{"output_type":"stream","name":"stdout","text":["Training set shape: (16000, 8)\n","Testing set shape: (1000, 8)\n"]}]},{"cell_type":"code","source":["# Train the model using sklearn (Apply linear regression to train a model for prediction)\n","model = LinearRegression()\n","model.fit(X_train, y_train)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":75},"id":"ed3mAonKmnPf","executionInfo":{"status":"ok","timestamp":1685454787029,"user_tz":-330,"elapsed":48,"user":{"displayName":"S Dhaneshan","userId":"18179611958018046570"}},"outputId":"20a313d9-320c-4548-cb3c-08a49d43954e"},"execution_count":24,"outputs":[{"output_type":"execute_result","data":{"text/plain":["LinearRegression()"],"text/html":["<style>#sk-container-id-1 {color: black;background-color: white;}#sk-container-id-1 pre{padding: 0;}#sk-container-id-1 div.sk-toggleable {background-color: white;}#sk-container-id-1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-1 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-1 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-1 div.sk-item {position: relative;z-index: 1;}#sk-container-id-1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-1 div.sk-item::before, #sk-container-id-1 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-1 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-1 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-1 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-1 div.sk-label-container {text-align: center;}#sk-container-id-1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-1 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>LinearRegression()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" checked><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">LinearRegression</label><div class=\"sk-toggleable__content\"><pre>LinearRegression()</pre></div></div></div></div></div>"]},"metadata":{},"execution_count":24}]},{"cell_type":"code","source":["# Predict the prices on test data and evaluate the model by r2 score and mean absolute error\n","y_pred = model.predict(X_test)\n","r2 = r2_score(y_test, y_pred)\n","mae = mean_absolute_error(y_test, y_pred)\n","print(\"R2 Score:\", r2)\n","print(\"Mean Absolute Error:\", mae)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"fteRXubYnI83","executionInfo":{"status":"ok","timestamp":1685454787030,"user_tz":-330,"elapsed":47,"user":{"displayName":"S Dhaneshan","userId":"18179611958018046570"}},"outputId":"e1b62a1e-b77f-4024-e8d0-c5c87c4f4aa3"},"execution_count":25,"outputs":[{"output_type":"stream","name":"stdout","text":["R2 Score: 0.6548237428290993\n","Mean Absolute Error: 50367.28523824515\n"]}]},{"cell_type":"code","source":["# Find coefficient and intercept using the trained model\n","print(\"Intercept:\", model.intercept_)\n","print(\"Coefficients:\", model.coef_)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"BFhPolpCoE_k","executionInfo":{"status":"ok","timestamp":1685454787031,"user_tz":-330,"elapsed":44,"user":{"displayName":"S Dhaneshan","userId":"18179611958018046570"}},"outputId":"fb9d072a-2b4a-438f-bf20-ee1a8b3f00e1"},"execution_count":26,"outputs":[{"output_type":"stream","name":"stdout","text":["Intercept: -3633156.896328691\n","Coefficients: [-4.32802019e+04 -4.30592538e+04  1.16581746e+03 -8.44384639e+00\n","  1.15160937e+02 -3.86009519e+01  4.93077908e+01  4.04227311e+04]\n"]}]},{"cell_type":"markdown","source":["Problem Ststement 3\n","\n","Data Science and Machine Learning Internship Program\n","©Brain4ce  Education Solutions Pvt.Ltd\n","Page \n","2\n","Write a Python code to perform the following \n","tasks mentioned\n",":\n","1.\n","Load the data, check its shape and check for null values \n","2.\n","Convert categorical \n","features\n","to numerical values \n","(Use One\n","-\n","Hot Encoding)\n","3.\n","Split the dataset for training and testing  \n","4.\n","Train the model using sklearn \n","–\n","Linear Regression\n","5.\n","Find the intercept and coefficient from the trained model \n","6.\n","Predict the prices of test data and evaluate the model \n","using \n","calculated\n","r2 score and root \n","mean squared error"],"metadata":{"id":"yCX9AX-JoM4g"}},{"cell_type":"code","source":["#Load the data, check its shape and check for null values \n","Data2=pd.read_csv(\"/content/insurance.csv\")\n","Data2.head()"],"metadata":{"id":"brUzbHBspCd8","colab":{"base_uri":"https://localhost:8080/","height":206},"executionInfo":{"status":"ok","timestamp":1685454787032,"user_tz":-330,"elapsed":41,"user":{"displayName":"S Dhaneshan","userId":"18179611958018046570"}},"outputId":"0d808eee-99e8-4269-dcb8-89fca6e93475"},"execution_count":27,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   age     sex     bmi  children smoker     region      charges\n","0   19  female  27.900         0    yes  southwest  16884.92400\n","1   18    male  33.770         1     no  southeast   1725.55230\n","2   28    male  33.000         3     no  southeast   4449.46200\n","3   33    male  22.705         0     no  northwest  21984.47061\n","4   32    male  28.880         0     no  northwest   3866.85520"],"text/html":["\n","  <div id=\"df-2018d8ef-be9c-4ef4-8258-912b528b654e\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>age</th>\n","      <th>sex</th>\n","      <th>bmi</th>\n","      <th>children</th>\n","      <th>smoker</th>\n","      <th>region</th>\n","      <th>charges</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>19</td>\n","      <td>female</td>\n","      <td>27.900</td>\n","      <td>0</td>\n","      <td>yes</td>\n","      <td>southwest</td>\n","      <td>16884.92400</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>18</td>\n","      <td>male</td>\n","      <td>33.770</td>\n","      <td>1</td>\n","      <td>no</td>\n","      <td>southeast</td>\n","      <td>1725.55230</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>28</td>\n","      <td>male</td>\n","      <td>33.000</td>\n","      <td>3</td>\n","      <td>no</td>\n","      <td>southeast</td>\n","      <td>4449.46200</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>33</td>\n","      <td>male</td>\n","      <td>22.705</td>\n","      <td>0</td>\n","      <td>no</td>\n","      <td>northwest</td>\n","      <td>21984.47061</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>32</td>\n","      <td>male</td>\n","      <td>28.880</td>\n","      <td>0</td>\n","      <td>no</td>\n","      <td>northwest</td>\n","      <td>3866.85520</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-2018d8ef-be9c-4ef4-8258-912b528b654e')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-2018d8ef-be9c-4ef4-8258-912b528b654e button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-2018d8ef-be9c-4ef4-8258-912b528b654e');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":27}]},{"cell_type":"code","source":["print(\"Dataset Shape :\",Data2.shape)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"aE5AdePL25qs","executionInfo":{"status":"ok","timestamp":1685454787033,"user_tz":-330,"elapsed":39,"user":{"displayName":"S Dhaneshan","userId":"18179611958018046570"}},"outputId":"1cb0d100-ca9a-4895-9f04-133e5c8d20e4"},"execution_count":28,"outputs":[{"output_type":"stream","name":"stdout","text":["Dataset Shape : (1338, 7)\n"]}]},{"cell_type":"code","source":["# Check the Null Values and remove it\n","Data2.isna().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"vEfVAT4h3MtE","executionInfo":{"status":"ok","timestamp":1685454787963,"user_tz":-330,"elapsed":964,"user":{"displayName":"S Dhaneshan","userId":"18179611958018046570"}},"outputId":"cf109c33-b237-44c2-df2a-1ea013ab3a0b"},"execution_count":29,"outputs":[{"output_type":"execute_result","data":{"text/plain":["age         0\n","sex         0\n","bmi         0\n","children    0\n","smoker      0\n","region      0\n","charges     0\n","dtype: int64"]},"metadata":{},"execution_count":29}]},{"cell_type":"code","source":["#Convert categorical features to numerical values (Use One - Hot Encoding) \n","Columns = ['sex','smoker','region']  # Replace with your categorical feature column names\n","data_encoded = pd.get_dummies(Data2, columns=Columns)\n","data_encoded.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"zKvJWPUj3Y6H","executionInfo":{"status":"ok","timestamp":1685454787967,"user_tz":-330,"elapsed":125,"user":{"displayName":"S Dhaneshan","userId":"18179611958018046570"}},"outputId":"773573c9-cd1f-4120-fd7d-b75a88086821"},"execution_count":30,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   age     bmi  children      charges  sex_female  sex_male  smoker_no  \\\n","0   19  27.900         0  16884.92400           1         0          0   \n","1   18  33.770         1   1725.55230           0         1          1   \n","2   28  33.000         3   4449.46200           0         1          1   \n","3   33  22.705         0  21984.47061           0         1          1   \n","4   32  28.880         0   3866.85520           0         1          1   \n","\n","   smoker_yes  region_northeast  region_northwest  region_southeast  \\\n","0           1                 0                 0                 0   \n","1           0                 0                 0                 1   \n","2           0                 0                 0                 1   \n","3           0                 0                 1                 0   \n","4           0                 0                 1                 0   \n","\n","   region_southwest  \n","0                 1  \n","1                 0  \n","2                 0  \n","3                 0  \n","4                 0  "],"text/html":["\n","  <div id=\"df-d4618f51-73d1-43c2-b420-bad242ab1f8c\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>age</th>\n","      <th>bmi</th>\n","      <th>children</th>\n","      <th>charges</th>\n","      <th>sex_female</th>\n","      <th>sex_male</th>\n","      <th>smoker_no</th>\n","      <th>smoker_yes</th>\n","      <th>region_northeast</th>\n","      <th>region_northwest</th>\n","      <th>region_southeast</th>\n","      <th>region_southwest</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>19</td>\n","      <td>27.900</td>\n","      <td>0</td>\n","      <td>16884.92400</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>18</td>\n","      <td>33.770</td>\n","      <td>1</td>\n","      <td>1725.55230</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>28</td>\n","      <td>33.000</td>\n","      <td>3</td>\n","      <td>4449.46200</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>33</td>\n","      <td>22.705</td>\n","      <td>0</td>\n","      <td>21984.47061</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>32</td>\n","      <td>28.880</td>\n","      <td>0</td>\n","      <td>3866.85520</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d4618f51-73d1-43c2-b420-bad242ab1f8c')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-d4618f51-73d1-43c2-b420-bad242ab1f8c button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-d4618f51-73d1-43c2-b420-bad242ab1f8c');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":30}]},{"cell_type":"code","source":["#  Split the dataset for training and testing\n","X = data_encoded.drop('charges', axis=1)\n","y = data_encoded['charges']\n","X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=10)"],"metadata":{"id":"y1bFZYLb7ouH","executionInfo":{"status":"ok","timestamp":1685454787968,"user_tz":-330,"elapsed":120,"user":{"displayName":"S Dhaneshan","userId":"18179611958018046570"}}},"execution_count":31,"outputs":[]},{"cell_type":"code","source":["#Train the model using sklearn Linear Regression\n","model1=LinearRegression()\n","model1.fit(X_train, y_train)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":75},"id":"Jr5Nvt3D8lcV","executionInfo":{"status":"ok","timestamp":1685454787969,"user_tz":-330,"elapsed":119,"user":{"displayName":"S Dhaneshan","userId":"18179611958018046570"}},"outputId":"22157289-b440-4b6e-cafb-e9a22480c8e7"},"execution_count":32,"outputs":[{"output_type":"execute_result","data":{"text/plain":["LinearRegression()"],"text/html":["<style>#sk-container-id-2 {color: black;background-color: white;}#sk-container-id-2 pre{padding: 0;}#sk-container-id-2 div.sk-toggleable {background-color: white;}#sk-container-id-2 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-2 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-2 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-2 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-2 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-2 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-2 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-2 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-2 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-2 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-2 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-2 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-2 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-2 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-2 div.sk-item {position: relative;z-index: 1;}#sk-container-id-2 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-2 div.sk-item::before, #sk-container-id-2 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-2 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-2 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-2 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-2 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-2 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-2 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-2 div.sk-label-container {text-align: center;}#sk-container-id-2 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-2 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-2\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>LinearRegression()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-2\" type=\"checkbox\" checked><label for=\"sk-estimator-id-2\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">LinearRegression</label><div class=\"sk-toggleable__content\"><pre>LinearRegression()</pre></div></div></div></div></div>"]},"metadata":{},"execution_count":32}]},{"cell_type":"code","source":["# Find the intercept and coefficient from the trained model \n","print(\"Intercept:\", model1.intercept_)\n","print(\"Coefficients:\", model1.coef_)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"78kCT_h39A5Q","executionInfo":{"status":"ok","timestamp":1685454787970,"user_tz":-330,"elapsed":118,"user":{"displayName":"S Dhaneshan","userId":"18179611958018046570"}},"outputId":"065a676a-02de-4538-b74d-fc8d0e430a97"},"execution_count":33,"outputs":[{"output_type":"stream","name":"stdout","text":["Intercept: -1209.3247516213069\n","Coefficients: [   259.54736297    353.03769217    543.28925423    127.19881786\n","   -127.19881786 -12062.05468851  12062.05468851    426.60645499\n","    234.60398263   -469.52714954   -191.68328808]\n"]}]},{"cell_type":"code","source":["# Predict the prices of test data and evaluate the model using calculated r2 score and root mean squared error\n","y_pred = model1.predict(X_test)\n","r2 = r2_score(y_test, y_pred)\n","rmse = sqrt(mean_squared_error(y_test, y_pred))\n","print(\"R2 Score:\", r2)\n","print(\"Root Mean Squared Error:\", rmse)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"OYKdNjuf9YNJ","executionInfo":{"status":"ok","timestamp":1685454787972,"user_tz":-330,"elapsed":112,"user":{"displayName":"S Dhaneshan","userId":"18179611958018046570"}},"outputId":"eb5a2a46-2258-4ce8-dad4-7b41fc3bf6c9"},"execution_count":34,"outputs":[{"output_type":"stream","name":"stdout","text":["R2 Score: 0.6953286838318304\n","Root Mean Squared Error: 6536.84669270073\n"]}]},{"cell_type":"markdown","source":["Problem Statement 4\n","\n","Write a Python code to perform the following tasks \n","mentioned:\n","1.\n","Load the data, check its shape and check for null values\n","2.\n","Convert categorical features to numerical values using Label Encoder\n","3.\n","Split the dataset for training and testing \n","4.\n","Train the model using sklearn\n","(linear regression)\n",", also find the intercept and coefficient \n","from the trained model \n","5.\n","Predict the profits of test data and evaluate the model \n","using r2 score and \n","mean squared \n","error\n","6.\n","Regularize the model using Ridge Regression and find the Score \n","7.\n","Regularize the model using Lasso\n","Regression and find the Score "],"metadata":{"id":"OnfxbXbN92V1"}},{"cell_type":"code","source":["Data3=pd.read_csv(\"/content/50_Startups.csv\")\n","Data3.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"9wjZ_yco-nXr","executionInfo":{"status":"ok","timestamp":1685454787973,"user_tz":-330,"elapsed":108,"user":{"displayName":"S Dhaneshan","userId":"18179611958018046570"}},"outputId":"4e00fd73-fd07-4d9d-edce-1ecadc515541"},"execution_count":35,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   R&D Spend  Administration  Marketing Spend       State     Profit\n","0  165349.20       136897.80        471784.10    New York  192261.83\n","1  162597.70       151377.59        443898.53  California  191792.06\n","2  153441.51       101145.55        407934.54     Florida  191050.39\n","3  144372.41       118671.85        383199.62    New York  182901.99\n","4  142107.34        91391.77        366168.42     Florida  166187.94"],"text/html":["\n","  <div id=\"df-dcca721f-ba90-4f9b-928b-59db2bad2a8e\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>R&amp;D Spend</th>\n","      <th>Administration</th>\n","      <th>Marketing Spend</th>\n","      <th>State</th>\n","      <th>Profit</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>165349.20</td>\n","      <td>136897.80</td>\n","      <td>471784.10</td>\n","      <td>New York</td>\n","      <td>192261.83</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>162597.70</td>\n","      <td>151377.59</td>\n","      <td>443898.53</td>\n","      <td>California</td>\n","      <td>191792.06</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>153441.51</td>\n","      <td>101145.55</td>\n","      <td>407934.54</td>\n","      <td>Florida</td>\n","      <td>191050.39</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>144372.41</td>\n","      <td>118671.85</td>\n","      <td>383199.62</td>\n","      <td>New York</td>\n","      <td>182901.99</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>142107.34</td>\n","      <td>91391.77</td>\n","      <td>366168.42</td>\n","      <td>Florida</td>\n","      <td>166187.94</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-dcca721f-ba90-4f9b-928b-59db2bad2a8e')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-dcca721f-ba90-4f9b-928b-59db2bad2a8e button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-dcca721f-ba90-4f9b-928b-59db2bad2a8e');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":35}]},{"cell_type":"code","source":["#check its shape \n","print(\"Dataset Shape :\",Data3.shape)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"eHy7WHII_Pyw","executionInfo":{"status":"ok","timestamp":1685454787974,"user_tz":-330,"elapsed":101,"user":{"displayName":"S Dhaneshan","userId":"18179611958018046570"}},"outputId":"24ea8810-3e4d-4422-83c1-443d92e8e927"},"execution_count":36,"outputs":[{"output_type":"stream","name":"stdout","text":["Dataset Shape : (50, 5)\n"]}]},{"cell_type":"code","source":["# Check the Null Values and remove it\n","Data3.isna().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"AFb4O5ng_qI8","executionInfo":{"status":"ok","timestamp":1685454787975,"user_tz":-330,"elapsed":90,"user":{"displayName":"S Dhaneshan","userId":"18179611958018046570"}},"outputId":"6be52c67-e287-4554-81e3-b5cba5d1180f"},"execution_count":37,"outputs":[{"output_type":"execute_result","data":{"text/plain":["R&D Spend          0\n","Administration     0\n","Marketing Spend    0\n","State              0\n","Profit             0\n","dtype: int64"]},"metadata":{},"execution_count":37}]},{"cell_type":"code","source":["#Convert categorical features to numerical values using Label Encoder\n","label_encoder = LabelEncoder()\n","Data3[\"State\"] = label_encoder.fit_transform(Data3[\"State\"])"],"metadata":{"id":"kreZ8MbD_tZq","executionInfo":{"status":"ok","timestamp":1685454787976,"user_tz":-330,"elapsed":85,"user":{"displayName":"S Dhaneshan","userId":"18179611958018046570"}}},"execution_count":38,"outputs":[]},{"cell_type":"code","source":["Data3.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"JZDms36XAcpt","executionInfo":{"status":"ok","timestamp":1685454787977,"user_tz":-330,"elapsed":85,"user":{"displayName":"S Dhaneshan","userId":"18179611958018046570"}},"outputId":"41c50785-7ec7-4df6-9e1c-9dbb51636002"},"execution_count":39,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   R&D Spend  Administration  Marketing Spend  State     Profit\n","0  165349.20       136897.80        471784.10      2  192261.83\n","1  162597.70       151377.59        443898.53      0  191792.06\n","2  153441.51       101145.55        407934.54      1  191050.39\n","3  144372.41       118671.85        383199.62      2  182901.99\n","4  142107.34        91391.77        366168.42      1  166187.94"],"text/html":["\n","  <div id=\"df-f0714ad0-583d-45d4-a97f-d5c17d5501e5\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>R&amp;D Spend</th>\n","      <th>Administration</th>\n","      <th>Marketing Spend</th>\n","      <th>State</th>\n","      <th>Profit</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>165349.20</td>\n","      <td>136897.80</td>\n","      <td>471784.10</td>\n","      <td>2</td>\n","      <td>192261.83</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>162597.70</td>\n","      <td>151377.59</td>\n","      <td>443898.53</td>\n","      <td>0</td>\n","      <td>191792.06</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>153441.51</td>\n","      <td>101145.55</td>\n","      <td>407934.54</td>\n","      <td>1</td>\n","      <td>191050.39</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>144372.41</td>\n","      <td>118671.85</td>\n","      <td>383199.62</td>\n","      <td>2</td>\n","      <td>182901.99</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>142107.34</td>\n","      <td>91391.77</td>\n","      <td>366168.42</td>\n","      <td>1</td>\n","      <td>166187.94</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f0714ad0-583d-45d4-a97f-d5c17d5501e5')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-f0714ad0-583d-45d4-a97f-d5c17d5501e5 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-f0714ad0-583d-45d4-a97f-d5c17d5501e5');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":39}]},{"cell_type":"code","source":["# Split the dataset for training and testing\n","X = Data3.drop('Profit', axis=1)\n","y = Data3['Profit']\n","X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=10)"],"metadata":{"id":"M6CvXDq1AkSI","executionInfo":{"status":"ok","timestamp":1685454787977,"user_tz":-330,"elapsed":84,"user":{"displayName":"S Dhaneshan","userId":"18179611958018046570"}}},"execution_count":40,"outputs":[]},{"cell_type":"code","source":["#Train the model using sklearn Linear Regression\n","model2=LinearRegression()\n","model2.fit(X_train, y_train)\n","# Find the intercept and coefficient from the trained model \n","print(\"Intercept:\", model2.intercept_)\n","print(\"Coefficients:\", model2.coef_)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Kg-WH_6vBGaG","executionInfo":{"status":"ok","timestamp":1685454787978,"user_tz":-330,"elapsed":84,"user":{"displayName":"S Dhaneshan","userId":"18179611958018046570"}},"outputId":"7b397675-362f-480b-ac61-28aaac653970"},"execution_count":41,"outputs":[{"output_type":"stream","name":"stdout","text":["Intercept: 50309.59099112513\n","Coefficients: [ 8.04328864e-01 -1.76830665e-02  2.39891745e-02 -4.84762306e+02]\n"]}]},{"cell_type":"code","source":["#Predict the profits of test data and evaluate the model using r2 score and mean squared error\n","y_pred = model2.predict(X_test)\n","r2 = r2_score(y_test, y_pred)\n","rmse = sqrt(mean_squared_error(y_test, y_pred))\n","print(\"R2 Score:\", r2)\n","print(\"Root Mean Squared Error:\", rmse)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"2TPTbq2LBVOW","executionInfo":{"status":"ok","timestamp":1685454787979,"user_tz":-330,"elapsed":77,"user":{"displayName":"S Dhaneshan","userId":"18179611958018046570"}},"outputId":"ae354a8f-46bb-4dde-a15c-3358e3547024"},"execution_count":42,"outputs":[{"output_type":"stream","name":"stdout","text":["R2 Score: 0.9908827024290412\n","Root Mean Squared Error: 4066.978746995184\n"]}]},{"cell_type":"code","source":["#Regularize the model using Ridge Regression and find the Score \n","ridge_model = Ridge(alpha=1.0) \n","ridge_model.fit(X_train, y_train)\n","score = ridge_model.score(X_test, y_test)\n","print(\"R2 Score:\", score)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"R0gNxpDc7JLB","executionInfo":{"status":"ok","timestamp":1685454905826,"user_tz":-330,"elapsed":8,"user":{"displayName":"S Dhaneshan","userId":"18179611958018046570"}},"outputId":"9151d05b-1143-400c-ea6b-cdaceccdb2ea"},"execution_count":44,"outputs":[{"output_type":"stream","name":"stdout","text":["R2 Score: 0.9909187258946467\n"]}]},{"cell_type":"code","source":["# Regularize the model using Lasso Regression and find the Score \n","lasso_model = Lasso(alpha=1.0) \n","lasso_model.fit(X_train, y_train)\n","score = lasso_model.score(X_test, y_test)\n","print(\"R2 Score:\", score)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"eDCP9iyI8TX2","executionInfo":{"status":"ok","timestamp":1685455017998,"user_tz":-330,"elapsed":575,"user":{"displayName":"S Dhaneshan","userId":"18179611958018046570"}},"outputId":"20e749aa-d572-4cac-f176-55c67d61c205"},"execution_count":46,"outputs":[{"output_type":"stream","name":"stdout","text":["R2 Score: 0.9908858012041096\n"]}]}]}